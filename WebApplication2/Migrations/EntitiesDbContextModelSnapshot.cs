// <auto-generated />
using System;
using DataAccess.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(EntitiesDbContext))]
    partial class EntitiesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChefFoodItems", b =>
                {
                    b.Property<Guid>("ChefsChefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChefsChefId", "FoodItemsId");

                    b.HasIndex("FoodItemsId");

                    b.ToTable("ChefFoodItems");
                });

            modelBuilder.Entity("DataAccess.Entities.Bill", b =>
                {
                    b.Property<Guid>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BillNumber")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BillId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("DataAccess.Entities.Chef", b =>
                {
                    b.Property<Guid>("ChefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChefLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ChefName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ChefId");

                    b.ToTable("Chef");
                });

            modelBuilder.Entity("DataAccess.Entities.FoodItems", b =>
                {
                    b.Property<Guid>("FoodItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FoodItemsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FoodItemsId");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("DataAccess.Entities.Guest", b =>
                {
                    b.Property<Guid>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GuestAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GuestPhoneNumber")
                        .HasColumnType("int");

                    b.Property<int>("GuestRoomNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuestId");

                    b.HasIndex("BillId")
                        .IsUnique();

                    b.HasIndex("ManagerId");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("DataAccess.Entities.HouseKeeping", b =>
                {
                    b.Property<Guid>("HouseKeepingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HouseKeepingLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseKeepingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HouseKeepingId");

                    b.ToTable("HouseKeeping");
                });

            modelBuilder.Entity("DataAccess.Entities.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InventoryStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InventoryType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InventoryId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("DataAccess.Entities.Manager", b =>
                {
                    b.Property<Guid>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ManagerLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ManagerVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerId");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("DataAccess.Entities.Receptionist", b =>
                {
                    b.Property<Guid>("ReceptionistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReceptionistLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceptionistName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReceptionistPhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("ReceptionistId");

                    b.HasIndex("BillId");

                    b.ToTable("ReceptionistManager");
                });

            modelBuilder.Entity("DataAccess.Entities.Rooms", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ChefFoodItems", b =>
                {
                    b.HasOne("DataAccess.Entities.Chef", null)
                        .WithMany()
                        .HasForeignKey("ChefsChefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.FoodItems", null)
                        .WithMany()
                        .HasForeignKey("FoodItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Entities.Guest", b =>
                {
                    b.HasOne("DataAccess.Entities.Bill", "Bill")
                        .WithOne("Guest")
                        .HasForeignKey("DataAccess.Entities.Guest", "BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Manager", "Manager")
                        .WithMany("Guests")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("DataAccess.Entities.Inventory", b =>
                {
                    b.HasOne("DataAccess.Entities.Manager", "Manager")
                        .WithMany("Inventories")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("DataAccess.Entities.Receptionist", b =>
                {
                    b.HasOne("DataAccess.Entities.Bill", "Bill")
                        .WithMany("Receptionists")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("DataAccess.Entities.Bill", b =>
                {
                    b.Navigation("Guest")
                        .IsRequired();

                    b.Navigation("Receptionists");
                });

            modelBuilder.Entity("DataAccess.Entities.Manager", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
